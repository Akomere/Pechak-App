{"version":3,"sources":["components/Button.js","components/Header.js","components/SingleTask.js","components/Task.js","components/AddTask.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","style","backgroundColor","color","className","onClick","click","text","Header","title","onAdd","addState","defaultProps","SingleTask","mytask","test","onDelete","onToggle","reminder","onDoubleClick","id","name","cursor","date","Task","taskin","map","task","AddTask","list","useState","setName","setDate","setReminder","suggest","setSuggest","resFound","setResult","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","console","log","searchVal","suggestion","length","sort","filter","includes","toLowerCase","item","checked","currentTarget","App","tasks","setTask","showForm","setShowForm","useEffect","a","fetchData","getTaskFromServer","getTasks","fetch","resp","json","data","fetchTask","deleteTask","method","toggleReminder","myTask","update","headers","body","JSON","stringify","res","toggleTask","addTask","dtask","mydata","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a19360b.chunk.js","sourcesContent":["const Button = (props)=>{\r\n    return <button style= {{backgroundColor: props.color}}  className=\"btn\" onClick={props.click}>{props.text}</button>\r\n}\r\n\r\nexport default Button","import Button from \"./Button\"\r\n\r\nconst Header = ({title, onAdd, addState}) => {\r\n\r\n    // const clickListen = ()=>{\r\n    //     console.log('clicked!!!')\r\n    // }\r\n    return (\r\n        <div>\r\n        <h1 className=\"header\">{title}</h1>\r\n        <Button color={addState ? 'red' : 'blue'} text={addState ? 'Close' : 'Add'} click={onAdd} />\r\n\r\n        </div>\r\n\r\n        \r\n        \r\n    )\r\n};\r\n\r\nHeader.defaultProps =\r\n{\r\ntitle: \"Task Tracker\",\r\n};\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {FaTimes} from 'react-icons/fa' \r\n\r\nfunction SingleTask({mytask, test, onDelete, onToggle}) {\r\n    return (\r\n        <div className= {`task ${mytask.reminder ? 'reminder' : ''}`} onDoubleClick = {(id) => onToggle(mytask.id)}>\r\n            <h1>{mytask.name} <FaTimes style = {{color: 'blue', cursor: 'pointer'}} onClick={()=>onDelete(mytask.id)}/> </h1>\r\n            <p>\r\n                {mytask.date}\r\n            </p>\r\n\r\n            <p>{test}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleTask\r\n","\r\nimport React from 'react';\r\nimport SingleTask from './SingleTask'\r\n\r\nconst Task = ({taskin, onDelete, onToggle})=> {\r\n \r\n    return (\r\n        <div>\r\n          \r\n          {taskin.map( (task)=> \r\n\r\n          \r\n        <SingleTask key={task.id} mytask = {task} onDelete={onDelete} onToggle = {onToggle}></SingleTask>)}\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React from 'react'\r\nimport {useState} from 'react';\r\n\r\n\r\nconst AddTask = ({onAdd, list}) => {\r\n    const[name, setName] = useState(\"\");\r\n    const[date, setDate] = useState(\"\");\r\n    const[reminder, setReminder] = useState(false);\r\n\r\n    //for suggestion handling\r\n    // const [searchText, setSearchText] = useState(\"\");\r\n    const [suggest,setSuggest] = useState([]);\r\n    const [resFound,setResult] = useState(true);\r\n\r\n    const handleInput = (e)=>{\r\n\r\n        setName(e.target.value);\r\n        console.log(name);\r\n\r\n        let searchVal = name;\r\n\r\n        let suggestion = [];\r\n\r\n        if(searchVal.length > 0){\r\n            suggestion = list.sort().filter((e) => e.name.includes(searchVal.toLowerCase()));\r\n            setResult(suggestion.length !== 0 ? true : false);\r\n        }\r\n\r\n        setSuggest(suggestion);\r\n        console.log(suggest)\r\n        \r\n    }\r\n\r\n    const suggestedText = (value)=>{\r\n\r\n        console.log(value);\r\n        setName(value.name);\r\n        setSuggest([]);\r\n\r\n    }\r\n\r\n    const displaySuggestion = ()=>{\r\n\r\n        if(suggest.length === 0 && name !== \"\" && !resFound){\r\n\r\n            return <p>no suggestions found</p>\r\n        }else{\r\n            return (\r\n            <ul>\r\n            {\r\n                suggest.map((item)=>{\r\n                return(<div key = {item.id}>\r\n                    <li onClick= {()=> suggestedText(item) } style = {{cursor: 'pointer'}}>\r\n                        {item.name}\r\n                    </li>\r\n                    <hr />\r\n                </div>)\r\n            })\r\n            }\r\n            </ul>\r\n        )\r\n\r\n        }\r\n    }\r\n\r\n    const submitTask = (e)=> {\r\n        e.preventDefault()\r\n\r\n        if(!name){\r\n\r\n            alert(\"please add text\")\r\n            return\r\n        }\r\n\r\n        onAdd({name, date, reminder})\r\n\r\n        setName(\"\")\r\n        setDate(\"\")\r\n        setReminder(false)\r\n\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit= {submitTask}>\r\n\r\n        <div className=\"form-control\" >\r\n\r\n        <label >Task</label>\r\n        <input type=\"text\" placeholder=\"input your task\" value={name} onChange={handleInput}/>\r\n        {displaySuggestion()}\r\n\r\n        </div>\r\n\r\n        <div className=\"form-control\" >\r\n\r\n        <label >Time</label>\r\n        <input type=\"date\"\r\n            value={date} onChange={(e)=> setDate(e.target.value)}/>\r\n\r\n        </div>\r\n\r\n        <div className=\"form-control-check\" >\r\n\r\n        <label >Set Reminder</label>\r\n        <input type=\"checkbox\" value={reminder} checked={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n\r\n        </div>\r\n\r\n        <input type=\"submit\" value=\"Save your task\"  className= \"btn btn-block\"/>\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React, {useState, useEffect} from \"react\";\nimport Header from './components/Header';\nimport Task from './components/Task';\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n\n  const [tasks, setTask] = useState([]);\n\nconst[showForm, setShowForm] = useState(false);\n\nuseEffect(()=>{\n\n  const getTasks = async ()=>{\n\n    const getTaskFromServer = await fetchData();\n\n    setTask(getTaskFromServer);\n\n    console.log(getTaskFromServer);\n  }\n  getTasks();\n\n}, [])\n\n\n// fetch data\nconst fetchData = async ()=>{\n  const resp = await fetch('/tasks');\n  const data = await resp.json();\n  return data;\n  }\n\n  // fetch Single task\n  const fetchTask = async (id)=>{\n    const resp = await fetch(`/tasks/${id}`);\n    const data = await resp.json();\n    \n    return data;\n    }\n\n// delete task\nconst deleteTask = async (id)=>{\n  fetch(`/tasks/${id}`, {\n    method: 'DELETE'\n  })\n\n  setTask(tasks.filter((task) => task.id !== id))\n\n}\n\n//toggle reminder\nconst toggleReminder =  async (id) => {\n\n  const myTask = await fetchTask(id);\n\n  \n\n  const update = {...myTask, reminder: !myTask.reminder}\n\n  \n\n  const res = await fetch(`/tasks/${id}`,{\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(update)\n  })\n\n  const toggleTask = await res.json();\n\n  \n  setTask(\n    tasks.map((task)=> task.id === id ? {...task, reminder: toggleTask.reminder} : task)\n  )\n}\n\n// add task\nconst addTask = async (dtask)=> {\n\n  console.log(dtask);\n  const res = await fetch('/tasks',{\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body: JSON.stringify(dtask)\n  });\n\n  \n  const mydata = await res.json();\n  console.log(mydata);\n  \n  setTask([...tasks, mydata[0]]);\n  console.log(tasks);\n  \n\n  // const id = Math.floor(Math.random() * 1000) + 1;\n\n  // const newTask = {id, ...task};\n\n  // setTask([...tasks, newTask]);\n\n  // console.log(task)\n}\n\nconsole.log(\"rendered \" + tasks)\n  return (\n    <header className=\"container\">\n       {/* <h1>Hello Akomere how are {x ? \"yuzzes\" : \"we\"} today?</h1> */}\n       <Header addState ={showForm} onAdd ={()=> {\n  setShowForm(!showForm)} } title =\"Task Tracking App\"/>\n       {showForm && <AddTask list= {tasks} onAdd= {addTask}/>}\n       {tasks.length > 0 ? <Task taskin = {tasks} onDelete= {deleteTask} onToggle ={toggleReminder} />: \"no tasks\"}\n       \n    </header>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}